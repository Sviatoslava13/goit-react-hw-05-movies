{"version":3,"file":"static/js/313.81c41920.chunk.js","mappings":"mRACMA,EAAW,mCACXC,EAAY,+BAEX,SAASC,IACd,OAAOC,EAAAA,GAAAA,IAAA,UACGF,EADH,uCAC2CD,IAC/CI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,CAEM,SAASC,EAAkBC,GAChC,OAAON,EAAAA,GAAAA,IAAA,UAEAF,EAFA,iCAEkCD,EAFlC,iCAEmES,IAEvEL,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,CACM,SAASG,EAAqBC,GACnC,OAAOR,EAAAA,GAAAA,IAAA,UACGF,EADH,kBACsBU,EADtB,oBACyCX,EADzC,oBAEJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,IACjB,GACJ,CACM,SAASM,EAAqBD,GACnC,OAAOR,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEmBU,EAFnB,4BAE8CX,EAF9C,oBAIJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKO,IACtB,GACJ,CACM,SAASC,EAAqBH,GACnC,OAAOR,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEmBU,EAFnB,4BAE8CX,EAF9C,2BAIJI,MAAK,SAAAC,GACJ,OAAOA,EAASC,KAAKC,OACtB,GACJ,C,mJC5COQ,EAAYC,EAAQ,IAApBD,QACKE,EAAYC,EAAAA,GAAAA,IAAH,+CAGTC,EAAOD,EAAAA,GAAAA,KAAH,0CAGJE,EAAQF,EAAAA,GAAAA,MAAH,oJAQLG,EAASH,EAAAA,GAAAA,OAAH,+QAeNI,EAAOJ,EAAAA,GAAAA,GAAH,4DAIJK,EAAOL,EAAAA,GAAAA,GAAH,2FAMJM,GAAON,EAAAA,EAAAA,IAAOH,EAAPG,CAAH,yH,SCmBjB,EAhDe,WAAO,IAAD,EACnB,GAAwCO,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMvB,EAAQiB,EAAaO,IAAb,UAAiB,SAAjB,EAA4B,IACpCC,GAAWC,EAAAA,EAAAA,MAkBjB,OALAC,EAAAA,EAAAA,YAAU,WACH3B,IACLD,EAAAA,EAAAA,IAAkBC,GAAOL,MAAK,SAAAE,GAAI,OAAIwB,EAAUxB,EAAd,GACnC,GAAE,CAACG,KAGF,UAACQ,EAAD,YACE,UAACE,EAAD,CAAMkB,SAdW,SAAAC,GAGnB,GAFAA,EAAEC,iBACFZ,EAAgB,CAAElB,MAAOsB,IACX,KAAVA,EAAc,OAAOS,MAAM,+BAC/BR,EAAS,GACV,EASG,WACE,SAACZ,EAAD,CACEqB,SApBa,SAAAH,GACnBN,EAASM,EAAEI,cAAcC,MAAMC,cAChC,EAmBOD,MAAOZ,EACPc,KAAK,OACLC,YAAY,yBAEd,SAACzB,EAAD,CAAQwB,KAAK,SAAb,uBAEDhB,IACC,SAACP,EAAD,UACGO,EAAOkB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC1B,EAAD,WACE,SAACC,EAAD,CAAM0B,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMlB,GAA1C,SACGc,KAFMC,EADD,QAWrB,C","sources":["components/Movied.js","components/Movies/Movies.styled.js","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API__KEY = '5222b846da18c1903ab10bf5e2597c32';\nconst BASE__URL = 'https://api.themoviedb.org/3';\n\nexport function fetchGetTrending() {\n  return axios\n    .get(`${BASE__URL}/trending/movie/day?api_key=${API__KEY}`)\n    .then(response => {\n      return response.data.results;\n    });\n}\n\nexport function fetchSearchMovies(query) {\n  return axios\n    .get(\n      `${BASE__URL}/search/movie?api_key=${API__KEY}&language=en-US&query=${query}`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\nexport function fetchGetMovieDetails(movieId) {\n  return axios\n    .get(`${BASE__URL}/movie/${movieId}?api_key=${API__KEY}&language=en-US`)\n    .then(response => {\n      return response.data;\n    });\n}\nexport function fetchGetMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE__URL}/movie/${movieId}/credits?api_key=${API__KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.cast;\n    });\n}\nexport function fetchGetMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE__URL}/movie/${movieId}/reviews?api_key=${API__KEY}&language=en-US&page=1`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\n","import styled from 'styled-components';\nconst { NavLink } = require('react-router-dom');\nexport const Container = styled.div`\n  padding: 30px 40px;\n`;\nexport const Form = styled.form`\n  display: flex;\n`;\nexport const Input = styled.input`\n  width: 200px;\n  height: 25px;\n  padding: 3px 10px;\n  outline: none;\n  border: 2px solid blue;\n  border-radius: 5px;\n`;\nexport const Button = styled.button`\n  border: 2px solid blue;\n  padding: 7px;\n  border-radius: 5px;\n  background-color: white;\n  margin-left: 2px;\n  :hover {\n    background-color: blue;\n    color: white;\n  }\n  :active {\n    background-color: blue;\n    color: white;\n  }\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\nexport const Item = styled.li`\n  margin-bottom: 5px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\nexport const Link = styled(NavLink)`\n  color: black;\n  font-family: inherit;\n  font-size: 18px;\n  :hover {\n    color: blue;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchSearchMovies } from '../Movied.js';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  Form,\n  Input,\n  Button,\n  List,\n  Item,\n  Link,\n  Container,\n} from './Movies.styled';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState([]);\n  const [input, setInput] = useState('');\n  const query = searchParams.get('query' ?? '');\n  const location = useLocation();\n\n  const handleChange = e => {\n    setInput(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: input });\n    if (input === '') return alert('Write the name of the movie');\n    setInput('');\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    fetchSearchMovies(query).then(data => setSearch(data));\n  }, [query]);\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={handleChange}\n          value={input}\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {search && (\n        <List>\n          {search.map(({ title, id }) => (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\nexport default Movies;\n"],"names":["API__KEY","BASE__URL","fetchGetTrending","axios","then","response","data","results","fetchSearchMovies","query","fetchGetMovieDetails","movieId","fetchGetMovieCredits","cast","fetchGetMovieReviews","NavLink","require","Container","styled","Form","Input","Button","List","Item","Link","useSearchParams","searchParams","setSearchParams","useState","search","setSearch","input","setInput","get","location","useLocation","useEffect","onSubmit","e","preventDefault","alert","onChange","currentTarget","value","toLowerCase","type","placeholder","map","title","id","to","state","from"],"sourceRoot":""}