{"version":3,"file":"static/js/387.22149df7.chunk.js","mappings":"uPACaA,EAAYC,EAAAA,GAAAA,IAAH,8DAITC,EAAWD,EAAAA,GAAAA,GAAH,wRAYRE,EAAWF,EAAAA,GAAAA,GAAH,kLAKRG,EAAWH,EAAAA,GAAAA,EAAH,wGAMRI,EAAcJ,EAAAA,GAAAA,IAAH,+G,kBCqBxB,MArCA,WACE,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAZ,GACxC,GAAE,CAACR,IAECG,GAGH,iCACE,SAACT,EAAD,WACE,SAACE,EAAD,UACGO,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAAChB,EAAD,YACE,gBACEiB,IACED,EAAY,0CAC2BA,GACnCE,EAENC,IAAKL,KAEP,UAACZ,EAAD,WACG,KACD,SAACD,EAAD,UAAWa,KACX,UAACb,EAAD,yBAAsBc,UAZXF,EADP,SAmBd,SAAC,KAAD,OAzBc,IA4BnB,C,mKC/CKO,EAAW,mCACXC,EAAY,+BAEX,SAASC,IACd,OAAOC,EAAAA,GAAAA,IAAA,UACGF,EADH,uCAC2CD,IAC/CV,MAAK,SAAAc,GACJ,OAAOA,EAASb,KAAKc,OACtB,GACJ,CAEM,SAASC,EAAkBC,GAChC,OAAOJ,EAAAA,GAAAA,IAAA,UAEAF,EAFA,iCAEkCD,EAFlC,iCAEmEO,IAEvEjB,MAAK,SAAAc,GACJ,OAAOA,EAASb,KAAKc,OACtB,GACJ,CACM,SAASG,EAAqBzB,GACnC,OAAOoB,EAAAA,GAAAA,IAAA,UACGF,EADH,kBACsBlB,EADtB,oBACyCiB,EADzC,oBAEJV,MAAK,SAAAc,GACJ,OAAOA,EAASb,IACjB,GACJ,CACM,SAASF,EAAqBN,GACnC,OAAOoB,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEmBlB,EAFnB,4BAE8CiB,EAF9C,oBAIJV,MAAK,SAAAc,GACJ,OAAOA,EAASb,KAAKL,IACtB,GACJ,CACM,SAASuB,EAAqB1B,GACnC,OAAOoB,EAAAA,GAAAA,IAAA,UAEAF,EAFA,kBAEmBlB,EAFnB,4BAE8CiB,EAF9C,2BAIJV,MAAK,SAAAc,GACJ,OAAOA,EAASb,KAAKc,OACtB,GACJ,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Movied.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Container = styled.div`\n  display: flex;\n  padding: 20px 0;\n`;\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const CastItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const CastText = styled.p`\nmargin-top:0;\n  margin-bottom: 5px;\n  :last-child {\n    margin-bottom: 0;\n  `;\nexport const CastContent = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchGetMovieCredits } from '../Movied.js';\nimport {\n  Container,\n  CastList,\n  CastItem,\n  CastText,\n  CastContent,\n} from './Cast.styled';\nimport noimage from '../../image/noimage.jpg';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchGetMovieCredits(movieId).then(data => setCast(data));\n  }, [movieId]);\n\n  if (!cast) return null;\n\n  return (\n    <>\n      <Container>\n        <CastList>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : noimage\n                }\n                alt={name}\n              />\n              <CastContent>\n                {' '}\n                <CastText>{name}</CastText>\n                <CastText>Character: {character}</CastText>\n              </CastContent>\n            </CastItem>\n          ))}\n        </CastList>\n      </Container>\n      <Outlet />\n    </>\n  );\n}\nexport default Cast;\n","import axios from 'axios';\nconst API__KEY = '5222b846da18c1903ab10bf5e2597c32';\nconst BASE__URL = 'https://api.themoviedb.org/3';\n\nexport function fetchGetTrending() {\n  return axios\n    .get(`${BASE__URL}/trending/movie/day?api_key=${API__KEY}`)\n    .then(response => {\n      return response.data.results;\n    });\n}\n\nexport function fetchSearchMovies(query) {\n  return axios\n    .get(\n      `${BASE__URL}/search/movie?api_key=${API__KEY}&language=en-US&query=${query}`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\nexport function fetchGetMovieDetails(movieId) {\n  return axios\n    .get(`${BASE__URL}/movie/${movieId}?api_key=${API__KEY}&language=en-US`)\n    .then(response => {\n      return response.data;\n    });\n}\nexport function fetchGetMovieCredits(movieId) {\n  return axios\n    .get(\n      `${BASE__URL}/movie/${movieId}/credits?api_key=${API__KEY}&language=en-US`\n    )\n    .then(response => {\n      return response.data.cast;\n    });\n}\nexport function fetchGetMovieReviews(movieId) {\n  return axios\n    .get(\n      `${BASE__URL}/movie/${movieId}/reviews?api_key=${API__KEY}&language=en-US&page=1`\n    )\n    .then(response => {\n      return response.data.results;\n    });\n}\n"],"names":["Container","styled","CastList","CastItem","CastText","CastContent","movieId","useParams","useState","cast","setCast","useEffect","fetchGetMovieCredits","then","data","map","id","name","character","profile_path","src","noimage","alt","API__KEY","BASE__URL","fetchGetTrending","axios","response","results","fetchSearchMovies","query","fetchGetMovieDetails","fetchGetMovieReviews"],"sourceRoot":""}